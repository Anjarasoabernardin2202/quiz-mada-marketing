{"version":3,"sources":["assets/img/answer.png","assets/img/fiftyFifty.PNG","assets/img/hints.PNG","assets/img/options.PNG","assets/audio/correct-answer.mp3","assets/audio/wrong-answer.mp3","assets/audio/button-sound.mp3","components/Home.js","components/quiz/QuizInstructions.js","utils/is-empty.js","components/quiz/Play.js","components/quiz/QuizSummary.js","App.js","index.js"],"names":["module","exports","Home","Helmet","id","style","textAlign","className","color","marginLeft","to","QuizInstructions","src","options","alt","answer","fiftyFifty","hints","isEmpty","value","undefined","Object","keys","length","trim","Play","props","displayQuestions","questions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","setState","numberOfQuestions","previousRandomNumbers","showOptions","handleDisableButton","handleOptionClick","e","optionA","A","optionB","B","optionC","C","target","innerHTML","toLowerCase","correctTimeout","setTimeout","correctSound","current","play","correctAnswer","wrongTimeout","wrongSound","wrongAnswer","handleNextButtonClick","playButtonSound","prevState","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","buttonSound","M","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","Array","from","document","querySelectorAll","forEach","option","visibility","usedFiftyFifty","handleHints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","nextButtonDisabled","alert","playerStats","fiftyFiftyUsed","hintsUsed","React","createRef","this","ref","correctNotification","wrongNotification","float","classnames","question","onClick","optionD","Component","QuizSummary","location","stats","remark","userScore","toFixed","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a80ca159.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/answer.f05e37d5.png\";","module.exports = __webpack_public_path__ + \"static/media/fiftyFifty.f06f3bfe.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hints.145bf217.PNG\";","module.exports = __webpack_public_path__ + \"static/media/options.0ab14d14.PNG\";","module.exports = __webpack_public_path__ + \"static/media/correct-answer.ee6aadae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong-answer.c7106542.mp3\";","module.exports = __webpack_public_path__ + \"static/media/button-sound.32194199.mp3\";","import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n    <Fragment>\n        <Helmet><title>Home - Quiz App FTD</title></Helmet>\n        <div id=\"home\">\n            <section>\n                <div style={{ textAlign: 'center' }}>\n                    <span className=\"mdi mdi-cube-outline cube\"></span>\n                </div>\n                <h1>Immigration au canada</h1>\n           \n                <h4 style={{color : \"#FFF\" , marginLeft : 175}}> (Quiz)</h4>\n                <div className=\"play-button-container\">\n                    <ul>\n                        <li><Link className=\"play-button\" to=\"play/quiz\">Commencer</Link></li>\n                    </ul>\n                </div>\n                \n            </section>\n        </div>\n    </Fragment>\n);\n\nexport default Home;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport answer from '../../assets/img/answer.png';\nimport fiftyFifty from '../../assets/img/fiftyFifty.PNG';\nimport hints from '../../assets/img/hints.PNG';\nimport options from '../../assets/img/options.PNG';\n\nconst QuizInstructions = () => (\n    <Fragment>\n        <Helmet><title>Instruction</title></Helmet>\n        <div className=\"instructions container\">\n            <h1>Instruction</h1>\n            <p>Assurez-vous de lire ce guide du début à la fin.</p>\n            <ul className=\"browser-default\" id=\"main-list\">\n                <li>Le jeu a une durée de 5 minutes et se termine dès que votre temps s'est écoulé.</li>\n                <li>Chaque question contient 4 options.</li>\n                <li>\n                    Un seul de cette options est correct\n                    <img src={options} alt=\"Quiz App options example\" />\n                </li>\n                <li>\n                    Sélectionnez l'option qui répond le mieux à la question en cliquant (ou en sélectionnant) dessus.\n                    <img src={answer} alt=\"Quiz App answer example\" />\n                </li>\n                <li>\n                    Each game has 2 lifelines namely:\n                    <ul id=\"sublist\">\n                        <li>2 50-50 chances</li>\n                        <li>5 Hints</li>\n                    </ul>\n                </li>\n                <li>\n                    Selecting a 50-50 lifeline by clicking the icon\n                    <span className=\"mdi mdi-set-center mdi-24px lifeline-icon\"></span>\n                    will remove 2 wrong answers, leaving the correct answer and one wrong answer\n                    <img src={fiftyFifty} alt=\"Quiz App Fifty-Fifty example\"/>\n                </li>\n                <li>\n                    Using a hint by clicking the icon\n                    <span className=\"mdi mdi-lightbulb-on mdi-24px lifeline-icon\"></span>\n                    will remove one wrong answer leaving two wrong answers and one correct answer. You can use as many hints as possible on a single question.\n                    <img src={hints} alt=\"Quiz App hints example\" />\n                </li>\n                <li>Feel free to quit (or retire from) the game at any time. In that case your score will be revealed afterwards.</li>\n                <li>The timer starts as soon as the game loads.</li>\n                <li>Let's do this if you think you've got what it takes?</li>\n            </ul>\n            <div>\n                <span className=\"left\"><Link to=\"/\">No take me back</Link></span>\n                <span className=\"right\"><Link to=\"/play/quiz\">Okay, Let's do this!</Link></span>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default QuizInstructions;","const isEmpty = (value) => \n    value === undefined ||\n    value == null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;","import React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\n\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\n\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\n\nclass Play extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            questions,\n            currentQuestion: {},\n            nextQuestion: {},\n            previousQuestion: {},\n            answer: '',\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions: 0,\n            currentQuestionIndex: 0,\n            score: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0,\n            hints: 5,\n            fiftyFifty: 2,\n            usedFiftyFifty: false,\n            nextButtonDisabled: false,\n            previousButtonDisabled: true,\n            previousRandomNumbers: [],\n            time: {}\n        };\n        this.interval = null;\n        this.correctSound = React.createRef();\n        this.wrongSound = React.createRef();\n        this.buttonSound = React.createRef();\n    }\n\n    componentDidMount () {\n        const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\n        this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n        this.startTimer();\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.interval);\n    }\n\n    displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n        let { currentQuestionIndex } = this.state;   \n        if (!isEmpty(this.state.questions)) {\n            questions = this.state.questions;\n            currentQuestion = questions[currentQuestionIndex];\n            nextQuestion = questions[currentQuestionIndex + 1];\n            previousQuestion = questions[currentQuestionIndex - 1];\n            const answer = currentQuestion.answer;\n            this.setState({\n                currentQuestion,\n                nextQuestion,\n                previousQuestion,\n                numberOfQuestions: questions.length,\n                answer,\n                previousRandomNumbers: []\n            }, () => {\n                this.showOptions();\n                this.handleDisableButton();\n            });\n        }     \n    };\n\n    handleOptionClick = (e) => {\n        \n        let optionA = this.state.answer.A\n        let optionB = this.state.answer.B\n        let optionC = this.state.answer.C\n        if (e.target.innerHTML.toLowerCase() === optionA.toLowerCase() ||e.target.innerHTML.toLowerCase() === optionB.toLowerCase() || e.target.innerHTML.toLowerCase() === optionC.toLowerCase()   ) {\n            this.correctTimeout = setTimeout(() => {\n                this.correctSound.current.play();\n            }, 500);\n            this.correctAnswer();\n        } else {\n            this.wrongTimeout = setTimeout(() => {\n                this.wrongSound.current.play();\n            }, 500);\n            this.wrongAnswer();\n        }\n    }\n\n    handleNextButtonClick = () => {\n        this.playButtonSound();\n        if (this.state.nextQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex + 1\n            }), () => {\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n    handlePreviousButtonClick = () => {\n        this.playButtonSound();\n        if (this.state.previousQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex - 1\n            }), () => {\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n    handleQuitButtonClick = () => {\n        this.playButtonSound();\n        if (window.confirm('Are you sure you want to quit?')) {\n            this.props.history.push('/');\n        }\n    };\n\n    handleButtonClick = (e) => {\n        switch (e.target.id) {\n            case 'next-button':\n                this.handleNextButtonClick();\n                break;\n\n            case 'previous-button':\n                this.handlePreviousButtonClick();\n                break;\n\n            case 'quit-button':\n                this.handleQuitButtonClick();\n                break;\n\n            default:\n                break;\n        }\n        \n    };\n\n    playButtonSound = () => {\n        this.buttonSound.current.play();\n    };\n\n    correctAnswer = () => {\n        M.toast({\n            html: 'Bonne reponse',\n            classes: 'toast-valid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            score: prevState.score + 1,\n            correctAnswers: prevState.correctAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {            \n            if (this.state.nextQuestion === undefined) {\n                this.endGame();\n            } else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    wrongAnswer = () => {\n        navigator.vibrate(1000);\n        M.toast({\n            html: 'Mauvaise réponse',\n            classes: 'toast-invalid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            wrongAnswers: prevState.wrongAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {\n            if (this.state.nextQuestion === undefined) {\n                this.endGame();\n            } else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    showOptions = () => {\n        const options = Array.from(document.querySelectorAll('.option'));\n\n        options.forEach(option => {\n            option.style.visibility = 'visible';\n        });\n\n        this.setState({\n            usedFiftyFifty: false\n        });\n    }\n\n    handleHints = () => {\n        if (this.state.hints > 0) {\n            const options = Array.from(document.querySelectorAll('.option'));\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n\n            while (true) {\n                const randomNumber = Math.round(Math.random() * 3);\n                if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n                    options.forEach((option, index) => {\n                        if (index === randomNumber) {\n                            option.style.visibility = 'hidden';\n                            this.setState((prevState) => ({\n                                hints: prevState.hints - 1,\n                                previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                            }));\n                        }\n                    });\n                    break;\n                }\n                if (this.state.previousRandomNumbers.length >= 3) break;\n            }\n        }\n    }\n\n    handleFiftyFifty = () => {\n        if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n            const options = document.querySelectorAll('.option');\n            const randomNumbers = [];\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n\n            let count = 0;\n            do {\n                const randomNumber = Math.round(Math.random() * 3);\n                if (randomNumber !== indexOfAnswer) {\n                    if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n                            randomNumbers.push(randomNumber);\n                            count ++;\n                    } else {\n                        while (true) {\n                            const newRandomNumber = Math.round(Math.random() * 3);\n                            if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                                randomNumbers.push(newRandomNumber);\n                                count ++;\n                                break;\n                            }\n                        }\n                    }\n                }\n            } while (count < 2);\n\n            options.forEach((option, index) => {\n                if (randomNumbers.includes(index)) {\n                    option.style.visibility = 'hidden';\n                }\n            });\n            this.setState(prevState => ({\n                fiftyFifty: prevState.fiftyFifty - 1,\n                usedFiftyFifty: true\n            }));\n        }\n    }\n\n    startTimer = () => {\n        const countDownTime = Date.now() + 900000;\n        this.interval = setInterval(() => {\n            const now = new Date();\n            const distance = countDownTime - now;\n\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            if (distance < 0) {\n                clearInterval(this.interval);\n                this.setState({\n                    time: {\n                        minutes: 0,\n                        seconds: 0\n                    }\n                }, () => {\n                    this.endGame();\n                });\n            } else {\n                this.setState({\n                    time: {\n                        minutes,\n                        seconds,\n                        distance\n                    }\n                });\n            }\n        }, 1000);\n    }\n\n    handleDisableButton = () => {\n        if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n            this.setState({\n                previousButtonDisabled: true\n            });\n        } else {\n            this.setState({\n                previousButtonDisabled: false\n            });\n        }\n\n        if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n            this.setState({\n                nextButtonDisabled: true\n            });\n        } else {\n            this.setState({\n                nextButtonDisabled: false\n            });\n        }\n    }\n\n    endGame = () => {\n        alert('Le quiz est terminé !');\n        const { state } = this;\n        const playerStats = {\n            score: state.score,\n            numberOfQuestions: state.numberOfQuestions,\n            numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n            correctAnswers: state.correctAnswers,\n            wrongAnswers: state.wrongAnswers,\n            fiftyFiftyUsed: 2 - state.fiftyFifty,\n            hintsUsed: 5 - state.hints\n        };\n        setTimeout(() => {\n            this.props.history.push('/play/quizSummary', playerStats);\n        }, 1000);\n    }\n\n    render () {\n        const { \n            currentQuestion, \n            currentQuestionIndex, \n            fiftyFifty, \n            hints, \n            numberOfQuestions,\n            time \n        } = this.state;\n\n        return (\n            <Fragment>\n                <Helmet><title>Quiz Page</title></Helmet>\n                <Fragment>\n                    <audio ref={this.correctSound} src={correctNotification}></audio>\n                    <audio ref={this.wrongSound} src={wrongNotification}></audio>\n                    <audio ref={this.buttonSound} src={buttonSound}></audio>\n                </Fragment>\n                <div className=\"questions\">\n                    <h2>Mode questionnaire</h2>\n                 \n                    <div className=\"timer-container\">\n                        <p>\n                            <span className=\"left\" style={{ float: 'left' }}>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\n                            <span className={classnames('right valid', {\n                                'warning': time.distance <= 120000,\n                                'invalid': time.distance < 30000\n                            })}>\n                                {time.minutes}:{time.seconds}\n                            <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\n                        </p>\n                    </div>\n                    <h5>{currentQuestion.question}</h5>\n                    <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\n                    </div>\n                    <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\n                    </div>\n\n                    <div className=\"button-container\">\n                       \n                        <button \n                            className={classnames('', {'disable': this.state.nextButtonDisabled})}\n                            id=\"next-button\" \n                            onClick={this.handleButtonClick}>\n                                Suivant\n                            </button>\n                        <button id=\"quit-button\" onClick={this.handleButtonClick}>Quitter</button>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default Play;","import React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nclass QuizSummary extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            score: 0,\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0,\n            hintsUsed: 0,\n            fiftyFiftyUsed: 0\n        };\n    }\n\n    componentDidMount () {\n        const { state } = this.props.location;\n        if (state) {\n            this.setState({\n                score: (state.score / state.numberOfQuestions) * 100,\n                numberOfQuestions: state.numberOfQuestions,\n                numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\n                correctAnswers: state.correctAnswers,\n                wrongAnswers: state.wrongAnswers,\n                hintsUsed: state.hintsUsed,\n                fiftyFiftyUsed: state.fiftyFiftyUsed\n            });\n        }\n    }\n\n    render () {\n        const { state } = this.props.location;\n        let stats, remark;\n        const userScore = this.state.score;\n\n        if (userScore <= 30 ) {\n            remark = \"Vous avez besoin de plus d'information!\";\n        } else if (userScore > 30 && userScore <= 50) {\n            remark = 'Plus de chance la prochaine fois!';\n        } else if (userScore <= 70 && userScore > 50) {\n            remark = 'Tu peux faire mieux!';\n        } else if (userScore >= 71 && userScore <= 84) {\n            remark = 'Tu as été excellent!';\n        } else {\n            remark = \"Vous êtes un génie !\";\n        }\n\n        if (state !== undefined) {\n            stats = (\n                <Fragment>\n                    <div style={{ textAlign: 'center' }}>\n                        <span className=\"mdi mdi-check-circle-outline success-icon\"></span>\n                    </div>\n                    <h1>Le quiz est terminé</h1>\n                    <div className=\"container stats\">\n                        <h4>{remark}</h4>\n                        <h2>Votre Score: {this.state.score.toFixed(0)}&#37;</h2>\n                        <span className=\"stat left\">Nombre total de questions: </span>\n                        <span className=\"right\">{this.state.numberOfQuestions}</span><br />\n\n                        <span className=\"stat left\">Nombre de tentatives de questions: </span>\n                        <span className=\"right\">{this.state.numberOfAnsweredQuestions}</span><br />\n\n                        <span className=\"stat left\">Nombre de bonnes réponses: </span>\n                        <span className=\"right\">{this.state.correctAnswers}</span> <br />\n\n                        <span className=\"stat left\">Nombre de mauvaises réponses: </span>\n                        <span className=\"right\">{this.state.wrongAnswers}</span><br />\n\n              \n\n                    </div>\n                    <section>\n                        <ul>\n                            <li>\n                                <Link to =\"/play/quiz\">Rejouer</Link>\n                            </li>\n                            <li>\n                                <Link to =\"/\">Retour à la page d'acceuil</Link>\n                            </li>\n                        </ul>\n                    </section>\n                </Fragment>\n            );\n        } else {\n            stats = (\n                <section>\n                    <h1 className=\"no-stats\">No Statistics Available</h1>\n                    <ul>\n                        <li>\n                            <Link to =\"/play/quiz\">Take a Quiz</Link>\n                        </li>\n                        <li>\n                            <Link to =\"/\">Back to Home</Link>\n                        </li>\n                    </ul>\n                </section>\n            );\n        }\n        return (\n            <Fragment>\n                <Helmet><title>Quiz App - Summary</title></Helmet>\n                <div className=\"quiz-summary\">\n                    {stats}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default QuizSummary;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport QuizInstructions from './components/quiz/QuizInstructions';\nimport Play from './components/quiz/Play';\nimport QuizSummary from './components/quiz/QuizSummary';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/play/instructions\" exact component={QuizInstructions} />\n      <Route path=\"/play/quiz\" exact component={Play} />\n      <Route path=\"/play/quizSummary\" exact component={QuizSummary} />\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/@mdi/font/css/materialdesignicons.min.css';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\nimport '../node_modules/materialize-css/dist/js/materialize.min.js';\nimport './styles/styles.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}